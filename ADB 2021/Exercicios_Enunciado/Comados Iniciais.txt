Linguagem usada em Banco de Dados Relacionais
é SQL - Structured Query Language
Linguagem Estruturada de Consulta
comandos são classificados em:
DDL - Linguagem de Definição de Dados 
           Criar banco, tabelas, alterar tabelas
           create, alter, drop
DML - Linguagem de Manipulação de Dados
DCL - Linguagem de Controle de Dados
DTL - Linguagem de Transação de Dados



acessando mysql por linha de comando
botão iniciar do windows: cmd

cd\
o comando cd (change directory) - mudar de diretorio (pasta)

no windows explorer acessa a pasta onde está mysql instalado
nos laboratórios o mysql se encontra na pasta
C:\Program Files\MySQL\MySQL Server 5.7\bin


cd C:\Program Files\MySQL\MySQL Server 5.7\bin

dir

Acessando o mysql
mysql -u root -p
-u user (usuario)
-p password (senha)

Comandos SQL

show databases;
Exibir os banco de dados que foram criados

criar um novo banco de dados
create database <<nome_do_banco_dados>>
create database db_aula1;

para usar o banco de dados, teremos que colocar em uso 
então o comando usado será use
use <<nome_do_banco_de_dados>>
use db_aula1;

criar uma tabela chamada tb_empregado
create table <<nome_da_tabela>>
(
     <<nome_da_coluna>> <<tipo_da_coluna>> ,
    <<nome_da_coluna>> <<tipo_da_coluna>> ,
    <<nome_da_coluna>> <<tipo_da_coluna>> 
);

por exemplo:
create table tb_empregado 
(
     matricula int not null primary key,
     nome varchar(80) not null,
     dt_nascimento date ,
     cpf varchar(11) 
);


show tables;
desc tb_empregado;


use mysql;
show tables;
desc user;

use brasilclassificados;
show tables;

use db_aula1;
show tables;

desc tb_empregado;
/*altera a tabela adicionando uma nova coluna email*/
alter table tb_empregado 
   add column email varchar(80) not null;

desc tb_empregado;
/*altera a tabela apagando a coluna cpf - CUIDADO*/
alter table tb_empregado
   drop column cpf;

/*alterar a tabela para renomear uma coluna*/
alter table tb_empregado
   change dt_nascimento dt_nasc date not null;

   
criar a tabela chamada tb_usuario com 
com as colunas email do tipo varchar(80) not null,
nm_usuario do tipo varchar(40),
apelido do tipo varchar(30)  e 
senha do tipo varchar(200) not null
a coluna email é uma chave primária.
create table <<nome_da_tabela>>
(
     <<nome_da_coluna>> <<tipo_da_coluna>> ,
    <<nome_da_coluna>> <<tipo_da_coluna>> ,
    <<nome_da_coluna>> <<tipo_da_coluna>> 
);


create table tb_usuario (
     email varchar(80) not null primary key,
     nm_usuario varchar(40),
     apelido varchar(30) ,
     senha varchar(200) not null);

/*ou*/
create table tb_usuario (
     email varchar(80) not null ,
     nm_usuario varchar(40),
     apelido varchar(30) ,
     senha varchar(200) not null,
     primary key (email)  
);
/*apaga a tabela tb_usuario*/
drop table tb_usuario;
show tables;
/*definição de uma tabela com chave primaria composta*/
create table tb_usuario (
    id         int auto_increment,
    email   varchar(80) not null,
    nome   varchar(80) not null,
    apelido varchar(20) ,
    senha   varchar(200) not null,
    primary key (id, email) );

/*este comando, abaixo, irá dar um erro de sintaxe, devido a chave primária composta*/
create table tb_usuario (
    id         int auto_increment primary key,
    email   varchar(80) not null primary key,
    nome   varchar(80) not null,
    apelido varchar(20) ,
    senha   varchar(200) not null,
 );

/*Para inserir os dados na tabela*/
insert into tb_usuario (email, nome, apelido, senha)
values ('joseneuza.3110@df.senac.br', 'Joseneuza Aguiar',
  'jo', md5('123456'));

insert into tb_usuario (email, nome, apelido, senha)
values ('luis@gmail.com', 'Luis Felipe', 'Felipe', md5('unb')),
            ('alexandre@gmail.com', 'Alexandre Maranhão',
              'Alexandre', md5('567'));

select * from tb_usuario;
